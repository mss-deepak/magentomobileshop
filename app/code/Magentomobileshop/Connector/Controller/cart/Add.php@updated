<?php
namespace Magentomobileshop\Connector\Controller\Cart;
 
 
class Add extends \Magento\Framework\App\Action\Action
{
	   /**
          * @var \Magento\Checkout\Model\Cart
          */
         protected $checkoutCart;
         /**
          * @var \Magento\Catalog\Model\Product
          */
         protected $product;

         public function __construct(
            \Magento\Framework\App\Action\Context $context,
            \Magento\Framework\View\Result\PageFactory $resultPageFactory,
            \Magento\Catalog\Model\Product $productModel,
            \Magento\Checkout\Model\Cart $checkoutCart,
            \Magento\Framework\Locale\ResolverInterface $resolverInterface,
            \Magento\Framework\Message\ManagerInterface $messageManager,
            \Magento\Checkout\Model\Session  $session,
            \Magentomobileshop\Connector\Helper\Data  $customHelper
             
         ) {
             $this->resultPageFactory = $resultPageFactory;
             $this->checkoutCart = $checkoutCart;
             $this->productModel = $productModel;
             $this->resolverInterface = $resolverInterface;
             $this->messageManager = $messageManager;
             $this->session = $session;
             $this->customHelper = $customHelper;
             parent::__construct($context);
         }
        public function execute()
        {
        $this->customHelper->loadParent($this->getRequest()->getHeader('token')); 
           try {
            
            $params = $this->getRequest ()->getParams ();

            //$params =json_decode($json['data'],true);
            $search =  array('"{','}"');
            $replace = array('{','}');
            $subject = $params['options'];
            $final =  str_replace($search, $replace, $subject);
            $params['options'] = json_decode($final,1);
            //Mage::log($json,null,'logs.log');
            if (isset ( $params ['qty'] )) {
                $filter = new Zend_Filter_LocalizedToNormalized ( array (
                        'locale' => $this->resolverInterface->getLocaleCode () 
                ) );
                $params['qty'] = $filter->filter ( $params['qty'] );
            } else if ($params['product'] == '') {
                 $this->messageManager->addError( __('Product Not Added
                                The SKU you entered %s was not found." ,$sku') );
            }
            $request = $this->getRequest ();
            $product = $this->productModel->load($params['product']);
            
            if ($product->getData('has_options')):
                # validate options
                //$options=json_decode($params['data']['options'],true);
                $option=($params['options']);           
                if(count($option)>0):
                        $params['options']=$option;
                endif;
            endif;

            $cart = Mage::helper ( 'checkout/cart' )->getCart ();
            /*bundle product code start*/
             
             
            if (isset ($params['bundle_option']) ){

                if(isset($params['options'])) { 
                    $params = array("product"=>$params['product'],"options"=>$params['options'],
                        "bundle_option"=>json_decode($params['bundle_option'],1),'qty' => $params['qty']);
                 }else{ 
                        $params = array("product"=>$params['product'],
                        "bundle_option"=>json_decode($params['bundle_option'],1),'qty' => $params['qty']);
                }   
                    $cart->addProduct ( $product,$params);
            }elseif (isset ( $params['super_attribute'] )) {

   
                if(isset($params['options'])) {

                    

                    $params = array("product"=>$params['product'],"options"=>$params['options'],"super_attribute"=>json_decode($params['super_attribute'],1),
                        'qty' => $params['qty']
                    );

                }else{
                    $params = array("product"=>$params['product'],"super_attribute"=>json_decode($params['super_attribute'],1),
                        'qty' => $params['qty']
                    );
                }
                $cart->addProduct ( $product,$params);
            }else{ 
                if($params['custom_image_name'])  {  

                    $data = base64_decode($params['custom_image']);
                    file_put_contents(Mage::getBaseDir().'/tmp/'.$params['custom_image_name'], $data);

                    $_FILES['options_'.$params['attribute_id'].'_file'] = array ( 'name' => $params['custom_image_name'], 'type' => "image/jpeg" ,"tmp_name" =>  Mage::getBaseDir().'/tmp/'.$params['custom_image_name'] ,"error" => 0 ,"size" => getimagesize(Mage::getBaseDir().'/tmp/'.$params['custom_image_name']),'app'=>true );

                    $options['options_'.$params['attribute_id'].'_file_action'] = 'save_new';
                    $params['options_'.$params['attribute_id'].'_file_action'] = 'save_new';
                    $params['uenc']='aHR0cDovL21hc3RlcnNvZnR3YXJldGVjaG5vbG9naWVzLmNvbS9tbXNfZGV2ZWxvcG1lbnQvZGVmYXVsdC90ZXN0LXByb2R1Y3QuaHRtbA';
                }
                $cart->addProduct ( $product, $params);
            }

                $cart->save ();
            
            $quote = $this->session->getQuote();
            /*get last inserted cart ID*/
            $items = $quote->getAllVisibleItems ();
            $cartItemArr='';
            foreach ( $items as $item )
                $cartItemArr= $item->getId ();
            
            

            $items_qty = floor ( $quote->getItemsQty () );
            $result = '{"result":"success"';
            $result .= ', "items_qty": "' . $items_qty . '"';
            $result .= ', "cart_item_id": "' . $cartItemArr . '"}';
            echo $result;

        } catch ( Exception $e ) {
            $result = '{"result":"error"';
            $result .= ', "message": "' . str_replace("\"","||",$e->getMessage ()) . '"}';
            echo $result;   
            
        }

        }
}